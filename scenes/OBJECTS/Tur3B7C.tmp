[gd_scene load_steps=4 format=3 uid="uid://dh5obcnddkcct"]

[ext_resource type="Texture2D" uid="uid://4rny6ub8607v" path="res://pictures/turret_BASE.png" id="1"]
[ext_resource type="Texture2D" uid="uid://gokdbp0f727o" path="res://pictures/turret_FACE.png" id="2"]

[sub_resource type="GDScript" id="GDScript_iewdi"]
script/source = "extends Node2D

export(PackedScene) var BULLET: PackedScene = null

var target: Node2D = null

@onready var gunSprite = $GunSprite
@onready var rayCast = $RayCast2D
@onready var reloadTimer = $RayCast2D/ReloadTimer


func _ready():
    await(get_tree().process_frame)
    target = find_target()

func _physics_process(delta):
    if target != null:
        var angle_to_target: float = global_position.direction_to(target.global_position).angle()
        rayCast.global_rotation = angle_to_target

        if rayCast.is_colliding() and rayCast.get_collider().is_in_group(\"Player\"):
            gunSprite.rotation = angle_to_target
            if reloadTimer.is_stopped():
                shoot()

func shoot():
    print(\"PEW\")
    rayCast.enabled = false

    if BULLET:
        var bullet = Bullet.instantiate()
        get_tree().current_scene.add_child(bullet)
        bullet.global_position = global_position
        bullet.global_rotation = rayCast.global_rotation

    reloadTimer.start()

func find_target():
    var new_target: Node2D = null

    if get_tree().has_group(\"Player\"):
        new_target = get_tree().get_nodes_in_group(\"Player\")[0]

    return new_target

func _on_ReloadTimer_timeout():
    rayCast.enabled = true"

[node name="Turret" type="StaticBody2D"]
script = SubResource("GDScript_iewdi")

[node name="BaseSprite" type="Sprite2D" parent="."]
texture_filter = 1
texture = ExtResource("1")

[node name="GunSprite" type="Sprite2D" parent="."]
texture_filter = 1
texture = ExtResource("2")
vframes = 10

[node name="RayCast2D" type="RayCast2D" parent="."]

[node name="ReloadTimer" type="Timer" parent="RayCast2D"]
wait_time = 0.25
one_shot = true

[connection signal="timeout" from="RayCast2D/ReloadTimer" to="." method="_on_ReloadTimer_timeout"]
